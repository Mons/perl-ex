#summary История создания и для чего это нужно

= Вступление =

Думаю многие из пишуших на перле проходили через этапы: пишу свои "библиотечки", читаю Конвея, юзаю библиотечки с CPAN'а.
Но в итоге все сводится к тому, что требуемый функционал зачастую равномерно распределен по десяткам различных пакетов, которые ко всему еще и имеют немаленький размер. И поэтому в однострочниках и вспомогательных скриптах отладка начинается с warn "..." или функции реализуются на коленке заново, если их нет в стандартной поставке перла (ставить каждый раз модуль с CPAN'а конечно можно, но зачастую у большинства нет желания).


= ex::runtime =

Принципы данной библиотеки следующие:
  * Устаревший софт *must die*. Соответственно *use 5.8.8*;
  * Не используем в обязательном порядке пакеты, которых нет в стандартной поставке. Реализуем свою альтернативу и пробуем подгрузить библиотеку, если в этом есть большой смысл (значительный выигрыш в производительности)
  * Все функции реализуются в стиле встроенных функций, с понятными и короткими именами, и с указанием прототипа.
  * Функции без привязки к какому либо контексту. Например здесь не будет функции http_get. Это не попытка сделать PHP из Perl.

= ex::* прагмы =

Упрощенные или улучшенные версии прагм по умолчанию.
в данный момент имеется только *ex::lib*

= ex::debugging =

Простой синтаксис для замены warn sprintf ... if DEBUG;

= ex::provide =

Упрощенный заменитель Exporter. Для тех, кто так-же, как и я не любит @EXPORT, и ему подобные глобальные переменные.

_В данный момент пакетом все равно используется Exporter, просто прозрачно_

Но в дальнейшем вероятно будет переписан. Наследование от Exporter не есть хорошо.